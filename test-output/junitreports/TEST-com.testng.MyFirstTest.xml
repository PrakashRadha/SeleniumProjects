<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Amirthavahini08" failures="2" tests="14" name="com.testng.MyFirstTest" time="0.024" errors="0" timestamp="2025-04-30T08:38:29 IST" skipped="11">
  <testcase classname="com.testng.MyFirstTest" name="myName" time="0.011">
    <skipped/>
  </testcase> <!-- myName -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myName" time="0.001">
    <skipped/>
  </testcase> <!-- myName -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myName" time="0.001">
    <skipped/>
  </testcase> <!-- myName -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myName" time="0.002">
    <skipped/>
  </testcase> <!-- myName -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myName" time="0.001">
    <skipped/>
  </testcase> <!-- myName -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myName" time="0.001">
    <failure message="expected [false] but found [true]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at com.testng.MyFirstTest.myName(MyFirstTest.java:10)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- myName -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myCity" time="0.002">
    <skipped/>
  </testcase> <!-- myCity -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="nationality" time="0.000"/>
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myCity" time="0.002">
    <skipped/>
  </testcase> <!-- myCity -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myCity" time="0.001">
    <skipped/>
  </testcase> <!-- myCity -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myCity" time="0.001">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.testng.MyFirstTest.myCity(MyFirstTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- myCity -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myCity" time="0.000">
    <skipped/>
  </testcase> <!-- myCity -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myCity" time="0.000">
    <skipped/>
  </testcase> <!-- myCity -->
  <system-out/>
  <testcase classname="com.testng.MyFirstTest" name="myQualification" time="0.001">
    <skipped/>
  </testcase> <!-- myQualification -->
  <system-out/>
</testsuite> <!-- com.testng.MyFirstTest -->
